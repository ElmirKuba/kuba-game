import { Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app/app.module';
import { watch } from 'fs';
import { resolve } from 'path';
import { execSync } from 'child_process';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  const globalPrefix = 'api';

  app.setGlobalPrefix(globalPrefix);

  const port = process.env.PORT || 3000;

  await app.listen(port);

  Logger.log(
    `üöÄ Nest Backend –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ KubaGame –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç: http://localhost:${port}/${globalPrefix}`
  );

  // TODO: ElmirKuba 2025-07-29: –°–¥–µ–ª–∞—Ç—å –∞–ø–∏—à–∫—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ö–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ
  watch(resolve(process.cwd()), { recursive: true }, (eventType, fileName) => {
    if (fileName && fileName.includes('schema')) {
      console.log('üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ schema-—Ñ–∞–π–ª–µ:');
      console.log('  üìÇ –¢–∏–ø —Å–æ–±—ã—Ç–∏—è:', eventType);
      console.log('  üìÑ –ò–º—è —Ñ–∞–π–ª–∞:', fileName);

      const output = execSync('npm run drizzle:push', {
        encoding: 'utf-8', // –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        stdio: 'pipe', // –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ 'inherit' –¥–ª—è –ø—Ä—è–º–æ–≥–æ –≤—ã–≤–æ–¥–∞
      });

      console.log('‚úÖ drizzle:push –∑–∞–≤–µ—Ä—à–µ–Ω–æ:');
      console.log(output);
    }
  });
}

bootstrap();
