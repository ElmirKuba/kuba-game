import { HttpAdapterHost, NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import cookieParser from 'cookie-parser';
import { INestApplication, Logger, ValidationPipe } from '@nestjs/common';
import {
  ApiExceptionFilter,
  exceptionFactoryHandler,
} from './filters/http-exception.filter';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { PackageSourceInnerService } from './utility-level/package-source/package-source.utility.service';
import { ApiResultDto } from './dtos/output/api/api-result.dto';
import { AccountToUpdateDataDto } from './dtos/input/account/account-to-input-data.dto';

/** –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å REST-API */
const globalPrefix = 'api';

/**
 * –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å–µ–≥–æ —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å–æ Swagger
 */
const swaggerSetupBeforeStartApp = (app: INestApplication<any>) => {
  /** –°–∞–º, –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ, —ç–∫–∑–µ–º–ø–ª—è—Ä PackageSourceInnerService */
  const packageSourceInstance = PackageSourceInnerService.getInstance();
  /** –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */
  const versionApp = packageSourceInstance.getPackageByKey('version');
  /** URL –≤–µ–±-—Å–∞–π—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ */
  const websiteDeveloper =
    packageSourceInstance.getPackageByKey('websiteDeveloper');
  /** E-Mail —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ */
  const emailDeveloper =
    packageSourceInstance.getPackageByKey('emailDeveloper');

  const configDoc = new DocumentBuilder()
    .setTitle('Nest.js Backend —á–∞—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ KubaGame.')
    .setDescription(
      '–û–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö endpoints, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å Backend —á–∞—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ Nest.js —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞',
    )
    .setVersion(versionApp as string)
    .setContact(
      'ElmirKuba Develop',
      websiteDeveloper as string,
      emailDeveloper as string,
    )
    // .addCookieAuth()
    .build();

  const swDocument = SwaggerModule.createDocument(app, configDoc, {
    deepScanRoutes: true,
    extraModels: [ApiResultDto, AccountToUpdateDataDto],
    ignoreGlobalPrefix: false,
  });
  SwaggerModule.setup(`/${globalPrefix}/docs`, app, swDocument);
};

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ NestJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 *
 * ‚úÖ –£–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ:
 * ‚úî GET:    /api/system/dev/migrate                        - –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ –ë–î
 * ‚úî POST:   /api/account/create                            - –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
 * ‚úî POST:   /api/account/auth                              - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
 * ‚úî POST:   /api/account/logout                            - –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
 * ‚úî POST:   /api/session/refresh                           - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ AccessToken (–µ—Å–ª–∏ –∏—Å—Ç—ë–∫)
 * ‚úî GET:    /api/account/read                              - –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ –µ–≥–æ ID (–∏–ª–∏ —Å–≤–æ–µ–≥–æ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è ID)
 * ‚úî PATCH:  /api/account/update                            - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ª–æ–≥–∏–Ω, –ø–∞—Ä–æ–ª—å)
 * ‚úî GET:    /api/session/read-list                         - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π —Ç–µ–∫—É—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
 * ‚úî DELETE: /api/session/delete/:id                        - –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–µ—Å—Å–∏–∏ –ø–æ ID
 * ‚úî POST:   /api/session/clear-others                      - –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π –∫—Ä–æ–º–µ —Ç–µ–∫—É—â–µ–π
 * ‚úî WS:     ws://localhost:3001/socket-io-nest-backend     - WebSocket URL –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
 *
 * @returns {Promise<void>}
 */
async function bootstrap(): Promise<void> {
  /** –°–æ–∑–¥–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä NestJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */
  const app = await NestFactory.create(AppModule, {
    cors: {
      origin: '*',
      credentials: true,
      methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE', 'OPTIONS'],
    },
  });
  /** –ü–æ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–Ω–∏–º–∞–µ—Ç REST-API */
  const port = process.env.BACKEND_PORT_RESTAPI ?? 3000;

  app
    .setGlobalPrefix(globalPrefix)
    .use(cookieParser())
    .useGlobalPipes(
      new ValidationPipe({
        whitelist: true,
        forbidNonWhitelisted: true,
        transform: true,
        stopAtFirstError: false,
        exceptionFactory: exceptionFactoryHandler,
      }),
    )
    .useGlobalFilters(new ApiExceptionFilter(app.get(HttpAdapterHost)));

  swaggerSetupBeforeStartApp(app);

  await app.listen(port);

  Logger.log(
    `üöÄ NestJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏ —Å–ª—É—à–∞–µ—Ç REST-API: http://localhost:${port}/${globalPrefix}`,
  );
}

void bootstrap();
